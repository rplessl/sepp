.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "..::..::sbin::SeppStart 3"
.TH ..::..::sbin::SeppStart 3 "2012-07-03" "1.5.3" "SEPP"
.SH "NAME"
SeppStart.pm \- SEPP startup wrapper Module
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBPreENV\fR \fIEnvVar\fR\fB,\fR \fIValue\fR\fB,\fR \fIValue\fR ...
.PP
\&\fBSetENV\fR \fIEnvVar\fR\fB,\fR \fIValue\fR
.PP
\&\fBExistENV\fR \fIEnvVar\fR
.PP
\&\fBAppRun\fR \fIBinaryPath\fR
.PP
\&\fBAppExec\fR \fIBinaryPath\fR
.PP
\&\fB$Pack\fR, \fB$PackDir\fR, \fB$PackVar\fR
.PP
At startup:
.PP
\&\fB\-\-seppdebug\fR
.PP
\&\fB\-\-seppenv\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a number of functions for creating SEPP/start.pl
wrappers. 
.IP "\fBPreENV\fR \fIEnvVar\fR\fB,\fR \fIValue\fR\fB,\fR \fIValue\fR ..." 10
.IX Item "PreENV EnvVar, Value, Value ..."
Prepends the \fIValue\fR to the current contents of \fIEnvVar\fR,
using the ':' as a separator. \f(CW\*(C`PreENV "PATH", "/usr/sbin"\*(C'\fR
.IP "\fBSetENV\fR \fIEnvVar\fR\fB,\fR \fIValue\fR" 10
.IX Item "SetENV EnvVar, Value"
Set \fIEnvVar\fR to \fIValue\fR
.IP "\fBExistENV\fR \fIEnvVar\fR" 10
.IX Item "ExistENV EnvVar"
Check the existance and the value in an environment variable \fIEnvVar\fR.
Returns the value or undef iff not defined.
.IP "\fBAppRun\fR \fIBinaryPath\fR" 10
.IX Item "AppRun BinaryPath"
Run the application specified through the contents of \f(CW$0\fR. The argument
must point to the directory where the application binaries are installed inside the pack. This
command should be used at the end of every start.pl script to launch
the actual application. It will also write an entry to the sepp syslog facility
local_4 when the application terminates. Giving details on runtime and exitcode
of the application.
.Sp
The return value of this function is the exit value of the called binary
.IP "\fBAppExec\fR \fIBinaryPath\fR" 10
.IX Item "AppExec BinaryPath"
Works like \fBAppRun\fR, but the application is started via exec.
This takes less memory, but the log entry will neither contain the 
runtime nor the exitcode of the application.
.IP "\fB$Pack\fR, \fB$PackDir\fR, \fB$PackVar\fR" 10
.IX Item "$Pack, $PackDir, $PackVar"
These three variables can be used in the start.pl file to
to make the wrappers easily portable ... 
.IP "\fB\-\-seppdebug\fR" 10
.IX Item "--seppdebug"
The optional parameter \fB\-\-seppdebug\fR shows the content of the runtime variables
\&\fB$PackDir\fR, \fB$Pack\fR and also the phyisical partition, where the \s-1SEPP\s0 package and
the call \s-1SEPP\s0 binary lives. 
.Sp
After showing the runtime variables the startup process of AppRun or
AppExec will be interrupted.
.IP "\fB\-\-seppenv\fR" 10
.IX Item "--seppenv"
The optional parameter \fB\-\-seppenv\fR in combination with \fB\-\-seppdebug\fR shows the 
runtime environment for the binary startup. The binary which is linked per default
at /usr/sepp/bin. 
.Sp
After showing the runtime and enviroment variables the startup process of AppRun 
or AppExec will be interrupted.
.SH "BUGS"
.IX Header "BUGS"
No Idea ... But if you tell me I'll fix 'em.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tobias Oetiker <oetiker@ee.ethz.ch>
Roman Plessl <roman.plessl@oetiker.ch>
