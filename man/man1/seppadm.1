.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SEPPADM 1"
.TH SEPPADM 1 "2012-07-03" "1.5.3" "SEPP"
.SH "NAME"
seppadm \- SEPP package administration tool
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBprepare\fR [\fIpathname\fR/]\fIpackage\fR [\fB\-\-shellonly\fR] [\fB\-\-noshell\fR]
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBenvironment\fR [\fIpathname\fR/]\fIpackage\fR
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBinstall\fR \fIpackage\fR [\fB\-\-default\fR] [\fB\-\-force\fR]
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBremove\fR \fIpackage\fR [\fB\-\-final\fR] [\fB\-\-usrsepp\fR]
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBmirror\fR \fIpackage\fR [\fB\-\-force\fR]
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBmirrorupdate\fR
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBexpose\fR \fIpackage\fR
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBlicense-expose\fR \fIpackage\fR
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBreport\fR [\fB\-\-datesort\fR] [\fB\-\-showremoved\fR]
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBwebbuild\fR [\fB\-\-localonly\fR] [\fB\-\-all\fR]
.PP
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBprefix_bundle\fR \fIpackage\fR \fIAppBundle\fR...
.PP
\&\fI\s-1OPT\s0\fR : [\fB\-\-seppdir=\fR\fI\s-1DIR\s0\fR] [\fB\-\-packdir=\fR\fI\s-1DIR\s0\fR] [\fB\-\-platform=\fR\fI\s-1OS\s0\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBseppadm\fR command is used to administer software packages within the
\&\fB\s-1SEPP\s0\fR system. Its primary functions are: installing
and removing packages, preparing directories for package installation,
mirroring packages from other servers, list available packages,
maintain the \s-1SEPP\s0 Application Catalog web site with information on the
available packages and keeping the local mirrors up to date.
.IP "\fBprepare\fR [\fIpathname\fR/]\fIpackage\fR [\fB\-\-shellonly\fR] [\fB\-\-noshell\fR]" 10
.IX Item "prepare [pathname/]package [--shellonly] [--noshell]"
Creates a skeleton package directory. 
.Sp
seppadm will automatically choose the filesystem with the most free space
unless there exists a file \fI\s-1SKIP_FREE_DISK\s0\fR in the filesystem/partition.
By specifying a pathname, this automatic free space choice can be overridden.
.Sp
The package name must have the format \fIapplication-version-maintainer\fR.
The package directory will become visible as /usr/pack/\fIpackage\fR.
This directory will contain one subdirectory called \fB\s-1SEPP\s0\fR which 
contains a number of template files. These templates have to be edited 
to fit the package.
.Sp
When the \fBprepare\fR function completes, it will execute an 'install shell'
which provides a controlled environment for application compilation and
installation.
.Sp
The options [\fB\-\-shellonly\fR] [\fB\-\-noshell\fR] allow to access an already
installed package with the install shell and not to get an install shell 
at all respectively.
.Sp
In an \s-1AFS\s0 setting if the new package should reside in a volume of their
own the volume must exist prior to preparing the package. As seppadm
has no means for doing this for you.
.Sp
In a \s-1DFS\s0 setting the new package directory must exist prior to preparing
the package. As seppadm has no means for doing this for you.
.IP "\fBenvironment\fR" 10
.IX Item "environment"
Prints environment variables.
.IP "\fBinstall\fR \fIpackage\fR [\fB\-\-default\fR] [\fB\-\-force\fR]" 10
.IX Item "install package [--default] [--force]"
Installing a package means two things: First the binaries get linked
into the /usr/sepp/bin directory and second, the application gets
listed in your packlist and can therefore be installed on cooperating
systems.
.Sp
For an \s-1OSX\s0 Platform, the directories indicated in the binaries section
of the \s-1META\s0 file are searched for \s-1OSX\s0 Application bundles. The
dir-structure of the SEPP-Package is then stubbed in the
\&\f(CW\*(C`/usr/sepp/macosx\*(C'\fR dir. As an example the package \f(CW\*(C`mypkg\-1.0\-as\*(C'\fR
could have the following content:
.Sp
.Vb 10
\& /usr/pack/mypkg\-1.0\-as
\&   powerpc\-apple\-darwin7.4.1/
\&      Applications/
\&         App1.app/
\&         App2.app/
\&         Examples/
\&         Important.doc
\&      Library/
\&         AdditionalLibs/
\&            Lib1.dyld
.Ve
.Sp
.Vb 6
\& /usr/sepp/var/mypkg\-1.0\-as
\&   Library/
\&      Preferences/
\&         ch.ethz.ee.isg.mypgk\-1_0\-as.com.apple.App1
\&         ch.ethz.ee.isg.mypgk\-1_0\-as.com.apple.App2
\&      AdditionalLibs (symlink into /usr/pack/...)
.Ve
.Sp
The relevant sections of the \f(CW\*(C`SEPP/META\*(C'\fR file:
.Sp
.Vb 2
\& *** package name ***
\& MyPkg
.Ve
.Sp
.Vb 2
\& *** categories ***
\& misc
.Ve
.Sp
The relevant sections of the \f(CW\*(C`SEPP/META.macosx\*(C'\fR file:
.Sp
.Vb 3
\& *** macosx binaries ***
\& powerpc\-apple\-darwin7.4.1/Applications
\& >>powerpc\-apple\-darwin7.4.1/Applications/Important.doc
.Ve
.Sp
The resulting structure in the \f(CW\*(C`macosx\*(C'\fR directory would be:
.Sp
.Vb 22
\& /usr/sepp/macosx/
\&   Applications/
\&      All/
\&         misc/
\&            MyPkg\-1.0\-as/
\&               App1.app/ (stub)
\&               App2.app/ (stub)
\&               Examples/ (symlink)
\&               Important.doc (copy)
\&       Default/
\&         misc/
\&            MyPkg/
\&               App1.app/ (stub)
\&               App2.app/ (stub)
\&               Examples/ (symlink)
\&               Important.doc (copy)
\&    Library/
\&       Preferences/
\&          ch.ethz.ee.isg.mypgk\-1_0\-as.com.apple.App1 (symlink)
\&          ch.ethz.ee.isg.mypgk\-1_0\-as.com.apple.App2 (symlink)
\&       AdditionalLibs/
\&          Lib1.dyld (symlink)
.Ve
.IP "\fBremove\fR \fIpackage\fR [\fB\-\-final\fR] [\fB\-\-usrsepp\fR]" 10
.IX Item "remove package [--final] [--usrsepp]"
Removes a package from the system. Without the option \fB\-\-final\fR 
the package does not get removed for real. It just gets earmarked, 
so that people who still use the package get a warning, telling them 
that the package is going to be removed soon. 
.Sp
The option \fB\-\-final\fR removes the package for real.
.Sp
The option \fB\-\-usrsepp\fR targets the cleaning towards 
/usr/sepp/{bin,man,html} only.
.IP "\fBmirror\fR \fIpackage\fR [\fB\-\-force\fR]" 10
.IX Item "mirror package [--force]"
Create a local copy of a package. This is to increase reliability and
performance. Use the \fB\-\-force\fR option to get your mirror updated regardless of the
state of the applications \s-1CHANGES\s0 log and PackList.
.IP "\fBmirrorupdate\fR" 10
.IX Item "mirrorupdate"
Verifies that all local mirrors are up to date.
.IP "\fBexpose\fR \fIpackage\fR" 10
.IX Item "expose package"
If a package has the license type 'world', this function will expose the 
whole package on the sepp package website by creating tar.bz2 archives 
in the SEPP/pub directory of the package. If there are recognizable 
architecture subdirectories in the package root, separate archives will be 
generated for each architecture. The \fISEPP/pub\fR directory will be symlinked 
from \fI/usr/sepp/html/pack/\fR\fIpackage\fR. A list of all published packages 
is maintained in \fI/usr/sepp/html/pack/index.txt\fR. Use the \fBsepp-get\fR 
application to download exposed sepp packages from one site to another.
.IP "\fBlicense-expose\fR \fIpackage\fR" 10
.IX Item "license-expose package"
If a package has the license type 'site', this function will expose 
the whole package on the sepp package website by creating tar.bz2 archives 
in the \fISEPP/lic\-pack\fR directory of the package. If there are recognizable 
architecture subdirectories in the package root, separate archives will be 
generated for each architecture. The \fISEPP/lic\-pack\fR directory will 
be symlinked  from \fI/usr/sepp/html/lic\-pack/\fR\fIpackage\fR. A list of all 
published packages is maintained in \fI/usr/sepp/html/lic\-pack/index.txt\fR. 
Use the \fBsepp-get\fR application to download exposed sepp packages from one 
site to another.
.IP "\fBreport\fR  [\fB\-\-datesort\fR] [\fB\-\-showremoved\fR]" 10
.IX Item "report  [--datesort] [--showremoved]"
Generates a list of available packages using information from all linked
servers.
.Sp
With \fB\-\-showremoved\fR seppadm will try to access \fI\s-1SEPP/REMOVABLE\s0\fR in each \s-1SEPP\s0
package to see if it has been removed. This can make the report much more slow.
.IP "\fBwebbuild\fR [\fB\-\-localonly\fR] [\fB\-\-all\fR]" 10
.IX Item "webbuild [--localonly] [--all]"
regenerates the local web site. Only the required pages will be built, unless
\&\fB\-\-all\fR is specified.
.Sp
\&\fBseppadm\fR \fI\s-1OPT\s0\fR \fBprefix_bundle\fR \fIpackage\fR \fIAppBundle\fR...
.Sp
MacOSX only: Ensure that the Bundle identifier specified in
\&\f(CW\*(C`Info.plist\*(C'\fR file of an application bundle is prefixed with our own
prefix. This ensures that two installed versions of the same
application read preferences from different files. Works only for
Cocoa applications. The prefix is constructed according to the \s-1OSX\s0 standards:
.Sp
\&\f(CW\*(C`ch.ethz.ee.isg.\*(C'\fR\fIpkg_name\fR\f(CW\*(C`\-\*(C'\fR\fIversion_number\fR\f(CW\*(C`\-\*(C'\fR\fImaintainer\fR\f(CW\*(C`.\*(C'\fR\fIoriginal_identifier\fR
.Sh "Options"
.IX Subsection "Options"
.IP "\-\-seppdir=DIR" 10
.IX Item "--seppdir=DIR"
Use \fI\s-1DIR\s0\fR instead of /usr/sepp
.IP "\-\-packdir=DIR" 10
.IX Item "--packdir=DIR"
Use \fI\s-1DIR\s0\fR instead of /usr/pack
.Sp
\&\s-1CAUTION:\s0 Other packdir's than /usr/pack (may) breaks the possibiliy to
exchange packages with other \s-1SEPP\s0 users. Change this only if you know 
whats the inpact of this setting.
.IP "\-\-platform=OS" 10
.IX Item "--platform=OS"
Replace \*(L"preferred operating system\*(R" of sepp.conf with \fI\s-1OS\s0\fR
.SH "BUGS"
.IX Header "BUGS"
No Idea ... But if you tell me I'll fix 'em.
.SH "HISTORY"
.IX Header "HISTORY"
2004\-08\-27 as Extended for MacOSX
.SH "AUTHOR"
.IX Header "AUTHOR"
<Tobias Oetiker <tobi@oetiker.ch>>
<David Schweikert <david@schweikert.ch>>
<Anton Schultschik  <aschults@ee.ethz.ch>>
<Roman Plessl <roman.plessl@oetiker.ch>> (maintainer op\-sepp)
